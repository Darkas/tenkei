#!/bin/sh -e
# If you're debugging, replace -e with -ex in the line above.

if [ "$(uname)" = Darwin ]; then
	set_soname() {
	 install_name_tool -id "$@"
	}
else
	set_soname() {
		patchelf --set-soname "$@"
	}
fi

PACKAGE_YAML_IN="$(cat package.yaml.in)"
# HSRTS_PATH="/Library/Frameworks/GHC.framework/Versions/Current/usr/lib/ghc-8.2.2/rts"
HSRTS_PATH="$(echo "$(dirname "$(dirname "$(stack exec which ghc)")")"/lib/ghc-*/rts)"
HSRTS_LIB="$(cd "${HSRTS_PATH}"; find * -name 'libHSrts-ghc*.*.*.*' | sed 's/^lib//' | sed 's/\.[^.]*$//' | head -n1)"
eval "echo \"${PACKAGE_YAML_IN}\"" > package.yaml

type-parser generate haskell ../../TestLibraryDefinition --library src/TestLibraryTenkei.hs

stack build
ORIGINAL="$(find .stack-work/dist -name 'libHStest-library-*-ghc*.*.*.*')"
EXT="$(echo "${ORIGINAL}" | sed 's/^.*\.//')"
LIB="libtest-library.${EXT}"

cp "${ORIGINAL}" "${LIB}"
set_soname "${LIB}" "${LIB}"
